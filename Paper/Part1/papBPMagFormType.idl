;+===========================annotation--begin===================================================
; 形成亮点的磁场类型划分
;-===========================annotation--begin===================================================
@papBP.in
@papBPContourPar.in

;实例选择 1-3
nCase = '3'

;设置背景大小
defsysv,'!ps_y',!A4.y-12

;打开PS
set_plot,'PS'

;创建对象
oHmiData = obj_new('HMI') 
oAiaData = obj_new('AIA',fix(waveLen))

;获得画图实例的相关参数
papBPGetCasePars,nCase,areaNum=areaNum,arrSelTime=arrSelTime,offset=timeRange,newArea=needArea,boxArea=boxArea

;输入路径和输入文件(只画hmi的图，所以只读入hmi处理后数据和曲线数据)
aiaSavDir = '../../AIA_BP/Save/AfterCmp/'  + date + '/' + wavelen + '/' + areaNum + '/'
hmiSavDir = '../../HMI_BP/Save/AfterCmp/' + date + '/' + wavelen + '/' + areaNum + '/'
hmiSavFile = '*.sav' 
hmiInboxDir = '../../HMI_BP/Save/PhysInbox/' + date + '/' + wavelen + '/' + areaNum + '/'
hmiInboxFile = '*.sav'

;输出路径
figDir = '../Document/Figure/'
figFile = 'papBPCaseAnysis_' + nCase + '_.eps'
device,filename=figDir+figFile,xsize=!A4.x,ysize=!ps_y,bits=8,/color,/encapsul  ;A4纸 ： 21cm × 29.7cm

;设置搜索文件的相关参数
oAiaData->SetProperty,inputDir=aiaSavDir
oHmiData->SetProperty,inputDir=hmiSavDir,inputFile=hmiSavFile

;搜索文件 
oHmiData->FileSearch
;获得找到后的文件个数
oHmiData->GetProperty,fileArr=hmiFileArr

;恢复sav中存放的数据(曲线数据)
hmiBPGetBoxSavData,hmiInboxDir+hmiInboxFile,arrTime=arrTime,bgPosFlux=posFluxBg,bgNegFlux=negFluxBg, $
                   Intensity=Intensity,/scale,/info
                   
;根据算选事件取出相应的文件index
nSelTime = n_elements(arrSelTime)
fileIndex = intarr(nSelTime)
for i=0,nSelTime-1 do begin
    fileIndex[i] = where(arrSelTime[i] eq arrTime)
endfor 

;画图位置设置
n = 3  ;列数
m = 3  ;行数
       
;获得画图的位置
papBPGetCoordinates,nCase,needArea,n,m,x0=x0,y0=y0,dx=dx,dy=dy,mid=mid,seperate=seperate   
  
;y0 -- AIA图的y坐标
y1 = y0 - dy  ;HMI图的y坐标
y2 = y1 - dy - mid  ;曲线图的y坐标
                    
;设置画图参数
oHmiData->SetProperty,threshold=hmiThreshold,needArea=needArea 
oAiaData->SetProperty,threshold=papBPGetAiaThreshold(nCase),needArea=needArea
charthick = 3
hsize = 200.0  ;箭头的大小
thick = 4  ;箭头、方框、圆圈的厚度
                   
;获得自定义坐标轴
papBPGetLables,nCase,xlabel=xlabel,ylabel=ylabel,xnolab=xnolab,ynolab=ynolab  ;自定义坐标轴

;根据timeRange判断y的范围(曲线图)
tIndex = [where(timeRange[0] eq arrTime),where(timeRange[1] eq arrTime)] 
yFloorInt = min(Intensity[tIndex[0]:tIndex[1]])
yRangeInt = [yFloorInt,1]
yFloorMag = min([min(posFluxBg[tIndex[0]:tIndex[1]]), min(negFluxBg[tIndex[0]:tIndex[1]])])
yCeilMag = max([max(posFluxBg[tIndex[0]:tIndex[1]]), max(negFluxBg[tIndex[0]:tIndex[1]])])
yRangeMag = [yFloorMag,yCeilMag]

;获得每个磁图上的箭头和圆圈坐标
papBPGetCaseSymbol,nCase,posCircleCord=posCircleCord,negCircleCord=negCircleCord, $
                   posArrowCord=posArrowCord,negArrowCord=negArrowCord 
szPosCircleCord = size(posCircleCord,/dimensions)
szNegCircleCord = size(negCircleCord,/dimensions)
szPosArrowCord = size(posArrowCord,/dimensions)
szNegArrowCord = size(negArrowCord,/dimensions) 

for i=0,n-1 do begin
    ;hmi的处理------------------------------------------------------------------------------------------------------------
    ;读入hmi数据
    restore,hmiFileArr[fileIndex[i]],/ve 
         
    ;设置相应数据        
    oHmiData->SetProperty,map=hmiMap
    
    ;截出黄色方框内的数据
    oHmiData->SubMap,/pixel
    
    ;把map数据给data,准备画image
    oHmiData->Map2Data
    
    if (i eq 0) then begin 
        ;保存第一次的截取之后的map,准备画x坐标时使用
        oHmiData->GetProperty,map=hmiMap0
        save,hmiMap0,filename=MakeDir('../Save/Coords/'+date+wavelen+'/'+areaNum+'/')+areaNum+'_coords_.sav'
    endif  
    ;--------------------------------------------------------------------------------------------------------------------
    
    ;aia的处理------------------------------------------------------------------------------------------------------------
    ;从Hmi挑出与Aia符合的图
    oHmiData->GetFnamTime,hmiFileHead,i=fileIndex[i],Year=Year,Month=Month,Day=Day,Hour=Hour,Minute=Minute
    aiaSavFile = strcompress(aiaFileHead + Year + AiaymdChar + Month + AiaymdChar + Day + AiaconnChar + $
                             Hour + AiahmsChar + Minute + '*.sav',/remove_all)  ;获取hmi文件中的小时和分钟传递给aia用来读取数据
    
    ;搜索aia数据
    oAiaData->SetProperty,inputFile=aiaSavFile
    oAiaData->FileSearch 
    oAiaData->GetProperty,FileArr=aiaFileArr
    
    restore,aiaFileArr[0],/ve     
    oAiaData->SetProperty,map=aiaMap
    
    ;消除曝光时间的影响
    oAiaData->DExprTime  ;消除曝光时间的影响 ，只处理Map的数据
    
    ;截出黄色方框内的数据
    oAiaData->SubMap,/pixel
     
    ;把map数据给data        
    oAiaData->Map2Data 
    
    ;图像反转
    oAiaData->ImageNegatives
    ;--------------------------------------------------------------------------------------------------------------------
    
    ;开始画图-------------------------------------------------------------------------------------------------------------
    loadct,0
    
    ;画AIA的图像
    oAiaData->PlotImage,/onlyData,/noerase,position=[x0,y0-dy,x0+dx,y0]
    ;画hmi的contour
    loadct,3 ;黑-蓝-白
    oHmiData->Data2Contour,polarity='pos'  ;将消除曝光时间后的数据给contour
    oHmiData->Contour,c_colors=cntorCcolorsMagP,levels=cntorLevelsMagP,position=[x0,y0-dy,x0+dx,y0]
    loadct,1 ;黑-红-白
    oHmiData->Data2Contour,polarity='neg'
    oHmiData->Contour,c_colors=cntorCcolorsMagN,levels=cntorLevelsMagN,position=[x0,y0-dy,x0+dx,y0]
    
    loadct,0
    tvlct,0,0,255,1    ;Blue    
    ;画Box
    plot_box,(boxArea[0]+boxArea[1])/2.,(boxArea[2]+boxArea[3])/2., $
             boxArea[1]-boxArea[0],boxArea[3]-boxArea[2],color=1,thick=thick
    ;标注时间
    xyouts,x0+0.02,y0-0.03,papBPFormatTime(arrTime[fileIndex[i]]),charsize=1.2,/normal,color=0,charthick=3
    loadct,0
               
    ;画HMI的图像
    oHmiData->PlotImage,/onlyData,/noerase,position=[x0,y1-dy,x0+dx,y1] 
    ;这次载入颜色是为后面的箭头作准备 
    tvlct,0,0,255,1    ;Blue 
    tvlct,255,255,0,2  ;Yellow 
    tvlct,0,255,0,3    ;Green
    ;画Box  
    plot_box,(boxArea[0]+boxArea[1])/2.,(boxArea[2]+boxArea[3])/2., $
             boxArea[1]-boxArea[0],boxArea[3]-boxArea[2],color=2,thick=thick
           
    ;画箭头和圆圈   
    for j=0,szPosArrowCord[0]-1,4 do begin   ;正极箭头
        if (posArrowCord[j,i] ne -1) then $
            arrow,posArrowCord[j,i],posArrowCord[j+1,i],posArrowCord[j+2,i],posArrowCord[j+3,i],/data,hsize=hsize,thick=thick,color=3
    endfor
    for j=0,szNegArrowCord[0]-1,4 do begin   ;负极箭头
        if (negArrowCord[j,i] ne -1) then $    
            arrow,negArrowCord[j,i],negArrowCord[j+1,i],negArrowCord[j+2,i],negArrowCord[j+3,i],/data,hsize=hsize,thick=thick,color=2
    endfor
    for j=0,szPosCircleCord[0]-1,3 do begin   ;正极圆圈  
        if (posCircleCord[j,i] ne -1) then $ 
            draw_circle,posCircleCord[j,i],posCircleCord[j+1,i],posCircleCord[j+2,i],color=1,thick=thick
    endfor
    for j=0,szNegCircleCord[0]-1,3 do begin   ;负极圆圈  
        if (negCircleCord[j,i] ne -1) then $ 
            draw_circle,negCircleCord[j,i],negCircleCord[j+1,i],negCircleCord[j+2,i],color=2,thick=thick
    endfor
  
    loadct,0
    
    ;画曲线图
    curvePos = [x0,y2-dy,x0+dx,y2]   ;曲线图的坐标
    xtimeLabel = papBPGetTimeLables(nCase)
        
    if (i eq 0) then begin   ;Intensity
        ;计算y轴刻度值
        curvePos[0] -= seperate / 2.
        curvePos[2] -= seperate / 2.
        ylab = strcompress('.' + string(GradeArr(ceil(yFloorInt*10),1,10)),/remove_all)
        ylab[n_elements(ylab)-1] = '1.'
        ;y标题
        ytitle = 'Normalised Radiance (A.U.)'
        papBPPlotCurve,nCase,arrTime,Intensity,arrSelTime,type='Intensity',pos=curvePos,timeRange=timeRange, $
                       ytitle=ytitle,yRange=yRangeInt,xlab=xtimeLabel,ylab=ylab,item=['Intensity']               
    endif $
    else if (i eq 1) then begin   ;Flux(+)
        curvePos[0] += seperate / 2.
        curvePos[2] += seperate / 2.
        ylab = replicate(' ',n_elements(ylab))
        xtitle = 'Start Time ('+strmid(arrTime[0],0,strlen(arrTime[0])-4)+' UT)'
        ytitle = 'Flux (10!E19!N Mx)'
        papBPPlotCurve,nCase,arrTime,posFluxBg,arrSelTime,type='posFluxBg',pos=curvePos,timeRange=timeRange, $
                       ytitle=ytitle,yRange=yRangeMag,xlab=xtimeLabel,xtitle=xtitle,item =['Flux(+)']
    endif $
    else begin    ;Flux(-)
        curvePos[0] += seperate / 2.
        curvePos[2] += seperate / 2.
        papBPPlotCurve,nCase,arrTime,negFluxBg,type='negFluxBg',arrSelTime,pos=curvePos,timeRange=timeRange, $
                       yRange=yRangeMag,xlab=xtimeLabel,ylab=[ylab,' '],item=['Flux(-)']                                 
    endelse
         
    ;添加坐标轴-------------------------------------------------------------------------------------------------------------
    
    ;设置坐标轴使用数据
    oHmiData->SetProperty,map=hmiMap0
    
    if (i eq 0) then begin  ;添加左边一列的坐标轴
        ;添加AIA的坐标轴
        oHmiData->PlotMap,/noerase,position=[x0,y0-dy,x0+dx,y0],/notitle,/no_data,xtitle='',xtickname=xnolab,ytickname=ylabel,charthick=charthick
        
        ;test begin;
              ;oHmiData->PlotMap,/noerase,position=[x0,y0-dy,x0+dx,y0],/notitle,/no_data,xtitle=''
              ;goto,Finish
        ;endtest;
        
        ;添加HMI的坐标轴
        oHmiData->PlotMap,/noerase,position=[x0,y1-dy,x0+dx,y1],/notitle,/no_data,xtickname=xlabel,ytickname=ylabel,charthick=charthick       
    endif $
    else begin  ;添加其余列的坐标
        ;添加AIA的坐标轴
        oHmiData->PlotMap,/noerase,position=[x0,y0-dy,x0+dx,y0],/notitle,/nolabels,xtickname=xnolab,ytickname=ynolab,/no_data,charthick=charthick
        ;添加HMI的坐标轴
        oHmiData->PlotMap,/noerase,position=[x0,y1-dy,x0+dx,y1],/notitle,ytitle='',xtickname=xlabel,ytickname=ynolab,/no_data,charthick=charthick  
    endelse
    
    ;x起始坐标增加    
    x0 += dx    
endfor

Finish:
;销毁对象
obj_destroy,oHmiData 
obj_destroy,oAiaData

;关闭PS
device,/close_file
set_plot,'x'

Over
END                  